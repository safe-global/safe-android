apply from: '../buildsystem/android_library.gradle'
apply from: '../buildsystem/test_dependencies.gradle'
apply from: '../buildsystem/test_android_dependencies.gradle'
apply from: '../buildsystem/coverage_report.gradle'

apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'

android {

    defaultConfig {
        javaCompileOptions {

            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        buildConfigField javaTypes.STRING, "NATIVE_CURRENCY_SYMBOL", asString(getKey("NATIVE_CURRENCY_SYMBOL", "ETH"))
        buildConfigField javaTypes.STRING, "NATIVE_CURRENCY_NAME", asString(getKey("NATIVE_CURRENCY_NAME", "Ether"))

        buildConfigField (javaTypes.INT, "CHAIN_ID", "1")
        buildConfigField (javaTypes.BOOLEAN, "CHAIN_L2", "true")
        buildConfigField (javaTypes.STRING, "CHAIN_TEXT_COLOR", asString("#001428"))
        buildConfigField (javaTypes.STRING, "CHAIN_BACKGROUND_COLOR", asString("#E8E7E6"))
        buildConfigField (javaTypes.STRING, "BLOCKCHAIN_NAME", asString("Mainnet"))
        buildConfigField (javaTypes.STRING, "BLOCKCHAIN_SHORT_NAME", asString("eth"))
        buildConfigField javaTypes.STRING, "BLOCKCHAIN_NET_URL", asString(getKey("BLOCKCHAIN_NET_URL", "https://mainnet.infura.io/v3/"))
        buildConfigField javaTypes.STRING, "BLOCKCHAIN_EXPLORER_URL", asString(getKey("BLOCKCHAIN_NET_URL", "https://etherscan.io/"))
        buildConfigField javaTypes.ARRAY, "CHAIN_FEATURES",
                "new ${javaTypes.ARRAY} {" +
                        "\"EIP1559\"" +
                        "}"

        buildConfigField javaTypes.STRING, "INFURA_API_KEY", asString(getKey("INFURA_API_KEY", ""))

    }

    buildTypes {

        debug {
            buildConfigField ("String", "CLIENT_GATEWAY_URL", '"https://safe-client-nest.staging.5afe.dev/"')
            buildConfigField (javaTypes.INT, "CHAIN_ID", "5")
            buildConfigField (javaTypes.STRING, "CHAIN_TEXT_COLOR", asString("#ffffff"))
            buildConfigField (javaTypes.STRING, "CHAIN_BACKGROUND_COLOR", asString("#4D99EB"))
            buildConfigField (javaTypes.STRING, "BLOCKCHAIN_NAME", asString("Goerli"))
            buildConfigField (javaTypes.STRING, "BLOCKCHAIN_SHORT_NAME", asString("gor"))
            buildConfigField javaTypes.STRING, "BLOCKCHAIN_NET_URL", asString(getKey("BLOCKCHAIN_NET_URL", "https://goerli.infura.io/v3/"))
            buildConfigField javaTypes.STRING, "BLOCKCHAIN_EXPLORER_URL", asString(getKey("BLOCKCHAIN_NET_URL", "https://goerli.etherscan.io/"))
        }

        profile {
            buildConfigField javaTypes.STRING, "CLIENT_GATEWAY_URL", asString(getKey("CLIENT_GATEWAY_URL", "https://safe-client-nest.staging.5afe.dev/"))
            buildConfigField (javaTypes.INT, "CHAIN_ID", "5")
            buildConfigField (javaTypes.STRING, "CHAIN_TEXT_COLOR", asString("#ffffff"))
            buildConfigField (javaTypes.STRING, "CHAIN_BACKGROUND_COLOR", asString("#4D99EB"))
            buildConfigField (javaTypes.STRING, "BLOCKCHAIN_NAME", asString("Goerli"))
            buildConfigField (javaTypes.STRING, "BLOCKCHAIN_SHORT_NAME", asString("gor"))
            buildConfigField javaTypes.STRING, "BLOCKCHAIN_NET_URL", asString(getKey("BLOCKCHAIN_NET_URL", "https://goerli.infura.io/v3/"))
            buildConfigField javaTypes.STRING, "BLOCKCHAIN_EXPLORER_URL", asString(getKey("BLOCKCHAIN_NET_URL", "https://goerli.etherscan.io/"))
        }

        unsafe {
            buildConfigField javaTypes.STRING, "CLIENT_GATEWAY_URL", asString(getKey("CLIENT_GATEWAY_URL", "https://safe-client-nest.staging.5afe.dev/"))
            buildConfigField (javaTypes.INT, "CHAIN_ID", "5")
            buildConfigField (javaTypes.STRING, "CHAIN_TEXT_COLOR", asString("#ffffff"))
            buildConfigField (javaTypes.STRING, "CHAIN_BACKGROUND_COLOR", asString("#4D99EB"))
            buildConfigField (javaTypes.STRING, "BLOCKCHAIN_NAME", asString("Goerli"))
            buildConfigField (javaTypes.STRING, "BLOCKCHAIN_SHORT_NAME", asString("gor"))
            buildConfigField javaTypes.STRING, "BLOCKCHAIN_NET_URL", asString(getKey("BLOCKCHAIN_NET_URL", "https://goerli.infura.io/v3/"))
            buildConfigField javaTypes.STRING, "BLOCKCHAIN_EXPLORER_URL", asString(getKey("BLOCKCHAIN_NET_URL", "https://goerli.etherscan.io/"))
        }

        internal {
            buildConfigField javaTypes.STRING, "CLIENT_GATEWAY_URL", asString(getKey("CLIENT_GATEWAY_URL", "https://safe-client-nest.staging.5afe.dev/"))
            buildConfigField (javaTypes.INT, "CHAIN_ID", "5")
            buildConfigField (javaTypes.STRING, "CHAIN_TEXT_COLOR", asString("#ffffff"))
            buildConfigField (javaTypes.STRING, "CHAIN_BACKGROUND_COLOR", asString("#4D99EB"))
            buildConfigField (javaTypes.STRING, "BLOCKCHAIN_NAME", asString("Goerli"))
            buildConfigField (javaTypes.STRING, "BLOCKCHAIN_SHORT_NAME", asString("gor"))
            buildConfigField javaTypes.STRING, "BLOCKCHAIN_NET_URL", asString(getKey("BLOCKCHAIN_NET_URL", "https://guerli.infura.io/v3/"))
            buildConfigField javaTypes.STRING, "BLOCKCHAIN_EXPLORER_URL", asString(getKey("BLOCKCHAIN_NET_URL", "https://goerli.etherscan.io/"))

        }

        release {
            buildConfigField javaTypes.STRING, "CLIENT_GATEWAY_URL", asString(getKey("CLIENT_GATEWAY_URL", "https://safe-client.safe.global/"))
        }
    }

    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
}

dependencies {
    api project(":contracts")

    api "com.github.gnosis.bivrost-kotlin:bivrost-solidity-types:$versions.bivrost"

    // Room
    implementation "androidx.room:room-runtime:$versions.androidx_room"
    implementation "androidx.room:room-ktx:$versions.androidx_room"
    kapt "androidx.room:room-compiler:$versions.androidx_room"

    // More
    api("org.bouncycastle:bcprov-jdk15on:$versions.bouncycastle", {
        exclude group: 'junit', module: 'junit'
    })

    api "com.github.gnosis.svalinn-kotlin:security:$versions.svalinn"
    api "com.github.gnosis.svalinn-kotlin:utils:$versions.svalinn"
    api "com.github.gnosis.svalinn-kotlin:android-common:$versions.svalinn"
    api "com.github.gnosis.svalinn-kotlin:ethereum:$versions.svalinn"
    api "com.github.gnosis.svalinn-kotlin:ethereum-rpc:$versions.svalinn"
    api "com.github.gnosis.svalinn-kotlin:models:$versions.svalinn"
    api "com.github.gnosis.svalinn-kotlin:accounts-kethereum:$versions.svalinn"
    api "com.github.gnosis.svalinn-kotlin:crypto:$versions.svalinn"
    api("com.github.gnosis.svalinn-kotlin:ethereum-rpc-retrofit:$versions.svalinn") {
        exclude group: "com.squareup.retrofit2", module: "converter-moshi"
    }
    api "com.github.gnosis.svalinn-kotlin:utils-ethereum:$versions.svalinn"
    api "com.github.gnosis.svalinn-kotlin:common-adapter-moshi:$versions.svalinn"
    api "com.github.gnosis.svalinn-kotlin:mnemonic:$versions.svalinn"
    api "com.github.gnosis.svalinn-kotlin:mnemonic-android:$versions.svalinn"

    // Unstoppabledomains
    api "com.unstoppabledomains:resolution:$versions.unstoppabledomains"

    implementation "com.squareup.moshi:moshi:$versions.moshi"
    implementation "com.squareup.moshi:moshi-adapters:$versions.moshi"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$versions.moshi"

    api "com.squareup.retrofit2:retrofit:$versions.retrofit"

    testImplementation "androidx.room:room-testing:$versions.androidx_room"
}

ext {
    jacocoCoverageThreshold = 0.7 // 70%
}
